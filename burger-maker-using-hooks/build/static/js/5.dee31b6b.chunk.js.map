{"version":3,"sources":["features/Components/Orders/Order.module.css","features/Components/Orders/Order.js","features/Containers/Orders/OrdersComponent.js"],"names":["module","exports","Order","props","ingrediantsRef","orderData","ingre","ingrediants","push","name","amount","odata","value","ingreOutput","map","ingreRef","style","textTransform","display","padding","margin","border","key","orderOutput","orderd","className","CssStyles","price","toFixed","onClick","deleteThisOrder","OrdersComponent","this","token","userId","onFetchOrders","orderID","onDeleteOrder","elem","noOrders","textAlign","loading","Spinner","orders","length","order","id","deleteOrderHandler","Component","connect","state","auth","dispatch","actionTypes","WithErrorHandler","OrderxAxios"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,aAAe,8B,+KCgE/CC,EA3DD,SAACC,GAEb,IAAMC,EAAiB,GACjBC,EAAY,GAElB,IAAK,IAAIC,KAASH,EAAMI,YACtBH,EAAeI,KACb,CACEC,KAAMH,EACNI,OAAQP,EAAMI,YAAYD,KAKhC,IAAK,IAAIK,KAASR,EAAME,UACtBA,EAAUG,KAAK,CAACC,KAAME,EAAOC,MAAOT,EAAME,UAAUM,KAGtD,IAAME,EAAcT,EAAeU,KAAI,SAACC,GACtC,OACE,0BACEC,MAAO,CAACC,cAAe,aAAcC,QAAS,eAAgBC,QAAS,MAAOC,OAAQ,QAASC,OAAQ,kBACvGC,IAAKP,EAASN,MACXM,EAASN,KAHd,MAGuBM,EAASL,WAI9Ba,EAAclB,EAAUS,KAAI,SAACU,GACjC,OACE,yBACER,MAAO,CAACC,cAAe,cACvBK,IAAKE,EAAOf,MACXe,EAAOf,KAHV,MAGmBe,EAAOZ,OAAS,UAKvC,OACE,yBAAKa,UAAWC,IAAUxB,OACxB,2CAAiBW,GAEjB,6BAAK,4CAAL,IAAgCU,GAYhC,qCAAU,yCAAepB,EAAMwB,OAAOC,QAAQ,KAC9C,4BAAQC,QAAS1B,EAAM2B,iBAAvB,uBChDAC,G,mMAEEC,KAAK7B,MAAM8B,OAASD,KAAK7B,MAAM+B,QACjCF,KAAK7B,MAAMgC,cAAcH,KAAK7B,MAAM8B,MAAOD,KAAK7B,MAAM+B,U,yCAIvCE,GACjBJ,KAAK7B,MAAMkC,cAAcD,EAASJ,KAAK7B,MAAM8B,MAAOD,KAAK7B,MAAM+B,U,+BAGtD,IAAD,OACJI,EAAO,KACLC,EAAY,uBAAGvB,MAAO,CAACwB,UAAW,WAAtB,oBAyBlB,OAtBEF,EADEN,KAAK7B,MAAMsC,QACL,kBAACC,EAAA,EAAD,MAIN,yBAAKjB,UAAU,UAEZO,KAAK7B,MAAMwC,QAAuC,IAA7BX,KAAK7B,MAAMwC,OAAOC,OAAeL,EAAW,KAEjEP,KAAK7B,MAAMwC,OAAO7B,KAAI,SAAC+B,GACtB,OACE,kBAAE,EAAF,CACEtC,YAAasC,EAAMtC,YACnBoB,MAAOkB,EAAMlB,MACbL,IAAKuB,EAAMC,GACXhB,gBAAiB,kBAAM,EAAKiB,mBAAmBF,EAAMC,KACrDzC,UAAWwC,EAAMxC,gBAQ3B,6BACGiC,O,GAxCqBU,cA8DfC,uBAhBS,SAACC,GACvB,MAAO,CACLP,OAAQO,EAAML,MAAMF,OACpBF,QAASS,EAAML,MAAMJ,QACrBR,MAAOiB,EAAMC,KAAKlB,MAClBC,OAAQgB,EAAMC,KAAKjB,WAII,SAACkB,GAC1B,MAAO,CACLjB,cAAe,SAACF,EAAOC,GAAR,OAAmBkB,EAASC,IAAwBpB,EAAOC,KAC1EG,cAAe,SAACD,EAASH,EAAOC,GAAjB,OAA4BkB,EAASC,IAAwBjB,EAASH,EAAOC,QAIjFe,CAA8CK,YAAiBvB,EAAiBwB","file":"static/js/5.dee31b6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__Gpkfw\",\"OrderDetails\":\"Order_OrderDetails__2Wi4b\"};","import React from 'react';\n\n// import BurgerComponent from '../../Containers/Burger/BurgerComponent';\n\nimport CssStyles from './Order.module.css';\n\nconst Order = (props) => {\n  // console.log(props);\n  const ingrediantsRef = [];\n  const orderData = [];\n\n  for (let ingre in props.ingrediants) {\n    ingrediantsRef.push(\n      {\n        name: ingre,\n        amount: props.ingrediants[ingre],\n      }\n    );\n  }\n\n  for (let odata in props.orderData) {\n    orderData.push({name: odata, value: props.orderData[odata]});\n  }\n\n  const ingreOutput = ingrediantsRef.map((ingreRef) => {\n    return (\n      <span \n        style={{textTransform: 'capitalize', display: 'inline-block', padding: '3px', margin: '0 8px', border: '1px solid #ccc'}}\n        key={ingreRef.name} >\n          {ingreRef.name} : {ingreRef.amount}\n      </span>\n    );\n  });\n  const orderOutput = orderData.map((orderd) => {\n    return (\n      <div \n        style={{textTransform: 'capitalize'}}\n        key={orderd.name}>\n        {orderd.name} : {orderd.value || '-NA'}\n      </div>\n    );\n  });\n\n  return (\n    <div className={CssStyles.Order}>\n      <p>Ingrediants: {ingreOutput}</p>\n      \n      <div><strong>Details:</strong> {orderOutput}</div>\n\n      {/* <div className={CssStyles.OrderDetails}>\n        <div>\n          <div><strong>Details:</strong> {orderOutput}</div>\n        </div>\n\n        <div>\n          <BurgerComponent ingrediants={props.ingrediants}/>\n        </div>\n      </div> */}\n\n      <p>Price: <strong>SGD {(+props.price).toFixed(2)}</strong></p>\n      <button onClick={props.deleteThisOrder}>Delete this Order</button>\n    </div>\n  );\n}\n\nexport default Order;","import React, { Component } from 'react';\nimport OrderxAxios from '../../../axios-orders';\n\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../../store/actions/index';\n\nimport SpinnerComponent from '../../Components/UIElments/Spinner/Spinner';\nimport WithErrorHandler from '../../hoc/WithErrorHandler/WithErrorHandler';\n\nimport Order from '../../Components/Orders/Order';\nimport './Orders.css';\n\nclass OrdersComponent extends Component {\n  componentDidMount() {\n    if (this.props.token && this.props.userId) {\n      this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n  }\n\n  deleteOrderHandler(orderID) {\n    this.props.onDeleteOrder(orderID, this.props.token, this.props.userId);\n  }\n\n  render () {\n    let elem = null;\n    const noOrders = (<p style={{textAlign: 'center'}}>No orders found.</p>);\n\n    if (this.props.loading) {\n      elem = (<SpinnerComponent />);\n    } else {\n      elem = (\n\n        <div className=\"Orders\">\n\n          {this.props.orders && this.props.orders.length === 0 ? noOrders : null}\n\n          {this.props.orders.map((order) => {\n            return (\n              < Order\n                ingrediants={order.ingrediants}\n                price={order.price}\n                key={order.id}\n                deleteThisOrder={() => this.deleteOrderHandler(order.id)}\n                orderData={order.orderData}/> \n            );\n          })}\n        </div>\n      );\n    }\n\n    return (\n      <div >\n        {elem}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(actionTypes.fetchOrders(token, userId)),\n    onDeleteOrder: (orderID, token, userId) => dispatch(actionTypes.deleteOrder(orderID, token, userId)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (WithErrorHandler(OrdersComponent, OrderxAxios));"],"sourceRoot":""}