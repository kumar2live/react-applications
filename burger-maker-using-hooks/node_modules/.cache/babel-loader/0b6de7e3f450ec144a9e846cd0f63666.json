{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport OrderxAxios from '../../axios-orders';\nexport const addIngrediant = payload => {\n  return {\n    type: actionTypes.ADD_INGREDIANT,\n    ingrediantName: payload\n  };\n};\nexport const removeIngrediant = payload => {\n  return {\n    type: actionTypes.REMOVE_INGREDIANT,\n    ingrediantName: payload\n  };\n};\nexport const resetIngrediant = () => {\n  return {\n    type: actionTypes.RESET_INGREDIANTS\n  };\n};\nexport const fetchIngrediantsFailed = () => {\n  return {\n    type: actionTypes.FETCH_INGREDIANTS_FAILED\n  };\n};\nexport const setIngrediants = payload => {\n  return {\n    type: actionTypes.SET_INGREDIANTS,\n    ingrediants: payload\n  };\n};\nexport const fetchIngrediants = () => {\n  return dispatch => {\n    OrderxAxios.get('/ingrediants.json').then(response => {\n      dispatch(setIngrediants(response.data));\n    }).catch(error => {\n      dispatch(fetchIngrediantsFailed());\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mk/Desktop/Udemy/React/react-applications/burger-maker-using-hooks/src/store/actions/burgerActions.js"],"names":["actionTypes","OrderxAxios","addIngrediant","payload","type","ADD_INGREDIANT","ingrediantName","removeIngrediant","REMOVE_INGREDIANT","resetIngrediant","RESET_INGREDIANTS","fetchIngrediantsFailed","FETCH_INGREDIANTS_FAILED","setIngrediants","SET_INGREDIANTS","ingrediants","fetchIngrediants","dispatch","get","then","response","data","catch","error"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa;AACxC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,cADb;AAELC,IAAAA,cAAc,EAAEH;AAFX,GAAP;AAID,CALM;AAOP,OAAO,MAAMI,gBAAgB,GAAIJ,OAAD,IAAa;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAEJ,WAAW,CAACQ,iBADb;AAELF,IAAAA,cAAc,EAAEH;AAFX,GAAP;AAID,CALM;AAOP,OAAO,MAAMM,eAAe,GAAG,MAAM;AACnC,SAAO;AACLL,IAAAA,IAAI,EAAEJ,WAAW,CAACU;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AAC1C,SAAO;AACLP,IAAAA,IAAI,EAAEJ,WAAW,CAACY;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,cAAc,GAAIV,OAAD,IAAa;AACzC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,WAAW,CAACc,eADb;AAELC,IAAAA,WAAW,EAAEZ;AAFR,GAAP;AAID,CALM;AAOP,OAAO,MAAMa,gBAAgB,GAAG,MAAM;AACpC,SAAQC,QAAD,IAAc;AACnBhB,IAAAA,WAAW,CAACiB,GAAZ,CAAgB,mBAAhB,EAAqCC,IAArC,CAA2CC,QAAD,IAAc;AACtDH,MAAAA,QAAQ,CAACJ,cAAc,CAACO,QAAQ,CAACC,IAAV,CAAf,CAAR;AACD,KAFD,EAEGC,KAFH,CAEUC,KAAD,IAAW;AAClBN,MAAAA,QAAQ,CAACN,sBAAsB,EAAvB,CAAR;AACD,KAJD;AAKD,GAND;AAOD,CARM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport OrderxAxios from '../../axios-orders';\n\nexport const addIngrediant = (payload) => {\n  return {\n    type: actionTypes.ADD_INGREDIANT,\n    ingrediantName: payload,\n  }\n}\n\nexport const removeIngrediant = (payload) => {\n  return {\n    type: actionTypes.REMOVE_INGREDIANT,\n    ingrediantName: payload,\n  }\n}\n\nexport const resetIngrediant = () => {\n  return {\n    type: actionTypes.RESET_INGREDIANTS,\n  }\n}\n\nexport const fetchIngrediantsFailed = () => {\n  return {\n    type: actionTypes.FETCH_INGREDIANTS_FAILED,\n  }\n}\n\nexport const setIngrediants = (payload) => {\n  return {\n    type: actionTypes.SET_INGREDIANTS,\n    ingrediants: payload,\n  }\n}\n\nexport const fetchIngrediants = () => {\n  return (dispatch) => {\n    OrderxAxios.get('/ingrediants.json').then((response) => {\n      dispatch(setIngrediants(response.data));\n    }).catch((error) => {\n      dispatch(fetchIngrediantsFailed());\n    });\n  }\n}"]},"metadata":{},"sourceType":"module"}