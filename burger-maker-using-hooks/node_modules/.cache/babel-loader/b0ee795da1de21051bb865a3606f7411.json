{"ast":null,"code":"var _jsxFileName = \"/Users/mk/Desktop/Udemy/React/react-applications/burger-maker-using-hooks/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as ActionTypes from './store/actions/index';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport LayoutComponent from './features/Containers/Layout/LayoutComponent';\nimport BurgerBuilderComponent from './features/Containers/BurgerBuilder/BurgerBuilder'; // import CheckOutSummary from './features/Containers/CheckOut/CheckoutComponent';\n// import OrdersComponent from './features/Containers/Orders/OrdersComponent';\n// import AuthComponent from './features/Containers/Auth/AuthComponent';\n\nimport LogoutComponent from './features/Containers/Auth/LogoutComponent/LogoutComponent';\nimport asyncComponent from './features/hoc/AsyncComponent/AsyncComponent';\nconst asyncAuth = asyncComponent(() => {\n  return import('./features/Containers/Auth/AuthComponent');\n});\nconst asyncCheckout = asyncComponent(() => {\n  return import('./features/Containers/CheckOut/CheckoutComponent');\n});\nconst asyncOrders = asyncComponent(() => {\n  return import('./features/Containers/Orders/OrdersComponent');\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showComp: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.onAutoSignIn();\n  }\n\n  render() {\n    let routes = null;\n\n    if (this.props.isAuthenticated) {\n      routes = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/checkout\",\n        component: asyncCheckout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/orders\",\n        component: asyncOrders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/auth\",\n        component: asyncAuth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/logout\",\n        component: LogoutComponent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        component: BurgerBuilderComponent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })));\n    } else {\n      routes = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/auth\",\n        component: asyncAuth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        component: BurgerBuilderComponent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(LayoutComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, routes)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAutoSignIn: () => dispatch(ActionTypes.authCheckState())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));","map":{"version":3,"sources":["/Users/mk/Desktop/Udemy/React/react-applications/burger-maker-using-hooks/src/App.js"],"names":["React","Component","connect","ActionTypes","Route","Switch","withRouter","Redirect","LayoutComponent","BurgerBuilderComponent","LogoutComponent","asyncComponent","asyncAuth","asyncCheckout","asyncOrders","App","state","showComp","componentDidMount","props","onAutoSignIn","render","routes","isAuthenticated","mapStateToProps","auth","token","mapDispatchToProps","dispatch","authCheckState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport * as ActionTypes from './store/actions/index';\n\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\n\nimport LayoutComponent from './features/Containers/Layout/LayoutComponent';\nimport BurgerBuilderComponent from './features/Containers/BurgerBuilder/BurgerBuilder';\n// import CheckOutSummary from './features/Containers/CheckOut/CheckoutComponent';\n// import OrdersComponent from './features/Containers/Orders/OrdersComponent';\n// import AuthComponent from './features/Containers/Auth/AuthComponent';\nimport LogoutComponent from './features/Containers/Auth/LogoutComponent/LogoutComponent';\n\nimport asyncComponent from './features/hoc/AsyncComponent/AsyncComponent';\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./features/Containers/Auth/AuthComponent');\n})\n\nconst asyncCheckout = asyncComponent(() => {\n  return import('./features/Containers/CheckOut/CheckoutComponent');\n})\n\nconst asyncOrders = asyncComponent(() => {\n  return import('./features/Containers/Orders/OrdersComponent');\n})\n\nclass App extends Component {\n  state = {\n    showComp: true,\n  }\n\n  componentDidMount() {\n    this.props.onAutoSignIn();\n  }\n\n  render() {\n    let routes = null;\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <React.Fragment>\n          <Switch>\n            <Route path=\"/checkout\" component={asyncCheckout} />\n            <Route path=\"/orders\" component={asyncOrders} />\n            <Route path=\"/auth\" component={asyncAuth} />\n            <Route path=\"/logout\" component={LogoutComponent} />\n            <Route path=\"/\" component={BurgerBuilderComponent} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </React.Fragment>\n      )\n    } else {\n      routes = (\n      <React.Fragment>\n        <Switch>\n          <Route path=\"/auth\" component={asyncAuth} />\n          <Route path=\"/\" component={BurgerBuilderComponent} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </React.Fragment>);\n    }\n\n    return (\n      <div className=\"App\">\n        <LayoutComponent>\n          <Switch>\n            {routes}\n          </Switch>\n            {/* {this.state.showComp ? <BurgerBuilderComponent /> : null} */}\n        </LayoutComponent>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAutoSignIn: () => dispatch(ActionTypes.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\n"]},"metadata":{},"sourceType":"module"}