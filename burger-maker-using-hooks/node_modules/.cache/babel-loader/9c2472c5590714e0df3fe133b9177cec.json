{"ast":null,"code":"var _jsxFileName = \"/Users/mk/Desktop/Udemy/React/react-applications/burger-maker-using-hooks/src/features/Components/UIElments/Input/Input.js\";\nimport React from 'react';\nimport CssStyles from './Input.module.css';\n\nconst InputComponent = props => {\n  let inputElem = null;\n  let errorElem = null; // console.log(props);\n\n  const inputClasses = [CssStyles.InputElem];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(CssStyles.Invalid);\n    errorElem = React.createElement(\"span\", {\n      style: {\n        color: '#ab0c0c'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Please enter valid inputs.!\");\n  }\n\n  switch (props.elemType) {\n    case 'input':\n    case 'email':\n      inputElem = React.createElement(\"input\", Object.assign({\n        onChange: props.propertyChanged,\n        className: inputClasses.join(' ')\n      }, props.elemConfig, {\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n      break;\n\n    case 'textarea':\n      inputElem = React.createElement(\"textarea\", Object.assign({\n        onChange: props.propertyChanged,\n        className: inputClasses.join(' ')\n      }, props.elemConfig, {\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n      break;\n\n    case 'select':\n      inputElem = React.createElement(\"select\", {\n        onChange: props.propertyChanged,\n        className: inputClasses.join(' '),\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, props.elemConfig.options.map(opt => {\n        return React.createElement(\"option\", {\n          key: opt.value,\n          value: opt.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \" \", opt.displayValue, \" \");\n      }));\n      break;\n\n    default:\n      inputElem = React.createElement(\"input\", Object.assign({\n        onChange: props.propertyChanged,\n        className: inputClasses.join(' ')\n      }, props.elemConfig, {\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n  }\n\n  return React.createElement(\"div\", {\n    className: CssStyles.Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: CssStyles.Label,\n    htmlFor: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.label), inputElem, errorElem);\n};\n\nexport default InputComponent;","map":{"version":3,"sources":["/Users/mk/Desktop/Udemy/React/react-applications/burger-maker-using-hooks/src/features/Components/UIElments/Input/Input.js"],"names":["React","CssStyles","InputComponent","props","inputElem","errorElem","inputClasses","InputElem","invalid","shouldValidate","touched","push","Invalid","color","elemType","propertyChanged","join","elemConfig","value","options","map","opt","displayValue","Input","Label","name","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,MAAIC,SAAS,GAAG,IAAhB;AACA,MAAIC,SAAS,GAAG,IAAhB,CAFgC,CAGhC;;AAEA,QAAMC,YAAY,GAAG,CAACL,SAAS,CAACM,SAAX,CAArB;;AACA,MAAIJ,KAAK,CAACK,OAAN,IAAiBL,KAAK,CAACM,cAAvB,IAAyCN,KAAK,CAACO,OAAnD,EAA4D;AAC1DJ,IAAAA,YAAY,CAACK,IAAb,CAAkBV,SAAS,CAACW,OAA5B;AACAP,IAAAA,SAAS,GAAI;AAAM,MAAA,KAAK,EAAE;AAACQ,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAb;AACD;;AAED,UAAOV,KAAK,CAACW,QAAb;AACE,SAAM,OAAN;AACA,SAAM,OAAN;AACEV,MAAAA,SAAS,GAAI;AAAO,QAAA,QAAQ,EAAED,KAAK,CAACY,eAAvB;AAAyC,QAAA,SAAS,EAAET,YAAY,CAACU,IAAb,CAAkB,GAAlB;AAApD,SAAgFb,KAAK,CAACc,UAAtF;AAAkG,QAAA,KAAK,EAAEd,KAAK,CAACe,KAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAb;AACA;;AACF,SAAM,UAAN;AACEd,MAAAA,SAAS,GAAI;AAAU,QAAA,QAAQ,EAAED,KAAK,CAACY,eAA1B;AAA2C,QAAA,SAAS,EAAET,YAAY,CAACU,IAAb,CAAkB,GAAlB;AAAtD,SAAkFb,KAAK,CAACc,UAAxF;AAAoG,QAAA,KAAK,EAAEd,KAAK,CAACe,KAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAb;AACA;;AACF,SAAM,QAAN;AACEd,MAAAA,SAAS,GACP;AAAQ,QAAA,QAAQ,EAAED,KAAK,CAACY,eAAxB;AAAyC,QAAA,SAAS,EAAET,YAAY,CAACU,IAAb,CAAkB,GAAlB,CAApD;AAA4E,QAAA,KAAK,EAAEb,KAAK,CAACe,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGf,KAAK,CAACc,UAAN,CAAiBE,OAAjB,CAAyBC,GAAzB,CAA8BC,GAAD,IAAS;AACrC,eACE;AAAQ,UAAA,GAAG,EAAEA,GAAG,CAACH,KAAjB;AAAwB,UAAA,KAAK,EAAEG,GAAG,CAACH,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA4CG,GAAG,CAACC,YAAhD,MADF;AAGD,OAJA,CADH,CADF;AASA;;AACF;AACElB,MAAAA,SAAS,GAAI;AAAO,QAAA,QAAQ,EAAED,KAAK,CAACY,eAAvB;AAAwC,QAAA,SAAS,EAAET,YAAY,CAACU,IAAb,CAAkB,GAAlB;AAAnD,SAA+Eb,KAAK,CAACc,UAArF;AAAiG,QAAA,KAAK,EAAEd,KAAK,CAACe,KAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAb;AApBJ;;AAuBA,SACE;AAAK,IAAA,SAAS,EAAEjB,SAAS,CAACsB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAEtB,SAAS,CAACuB,KAA5B;AAAmC,IAAA,OAAO,EAAErB,KAAK,CAACsB,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyDtB,KAAK,CAACuB,KAA/D,CADF,EAEGtB,SAFH,EAGGC,SAHH,CADF;AAOD,CAzCD;;AA2CA,eAAeH,cAAf","sourcesContent":["import React from 'react';\nimport CssStyles from './Input.module.css';\n\nconst InputComponent = (props) => {\n  let inputElem = null;\n  let errorElem = null;\n  // console.log(props);\n\n  const inputClasses = [CssStyles.InputElem];\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(CssStyles.Invalid);\n    errorElem = (<span style={{color: '#ab0c0c'}}>Please enter valid inputs.!</span>);\n  }\n\n  switch(props.elemType) {\n    case ('input'):\n    case ('email'):\n      inputElem = (<input onChange={props.propertyChanged}  className={inputClasses.join(' ')} {...props.elemConfig} value={props.value}/>);\n      break;\n    case ('textarea'):\n      inputElem = (<textarea onChange={props.propertyChanged} className={inputClasses.join(' ')} {...props.elemConfig} value={props.value} />);\n      break;\n    case ('select'):\n      inputElem = (\n        <select onChange={props.propertyChanged} className={inputClasses.join(' ')} value={props.value}>\n          {props.elemConfig.options.map((opt) => {\n            return (\n              <option key={opt.value} value={opt.value}> {opt.displayValue} </option>\n            );\n          })}\n        </select>\n        );\n      break;\n    default:\n      inputElem = (<input onChange={props.propertyChanged} className={inputClasses.join(' ')} {...props.elemConfig} value={props.value}/>);\n  }\n\n  return (\n    <div className={CssStyles.Input} >\n      <label className={CssStyles.Label} htmlFor={props.name}>{props.label}</label>\n      {inputElem}\n      {errorElem}\n    </div>\n  );\n}\n\nexport default InputComponent;"]},"metadata":{},"sourceType":"module"}