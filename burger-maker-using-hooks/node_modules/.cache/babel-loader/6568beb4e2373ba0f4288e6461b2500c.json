{"ast":null,"code":"var _jsxFileName = \"/Users/mk/Desktop/Udemy/React/react-applications/burger-maker-using-hooks/src/features/Containers/Orders/OrdersComponent.js\";\nimport React, { useEffect } from 'react';\nimport OrderxAxios from '../../../axios-orders';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../../store/actions/index';\nimport SpinnerComponent from '../../Components/UIElments/Spinner/Spinner';\nimport WithErrorHandler from '../../hoc/WithErrorHandler/WithErrorHandler';\nimport Order from '../../Components/Orders/Order';\nimport './Orders.css';\n\nconst OrdersComponent = props => {\n  const {\n    onFetchOrders,\n    token,\n    userId\n  } = props;\n  useEffect(() => {\n    if (token && userId) {\n      onFetchOrders(props.token, props.userId);\n    }\n  }, [onFetchOrders]);\n\n  const deleteOrderHandler = orderID => {\n    props.onDeleteOrder(orderID, props.token, props.userId);\n  };\n\n  let elem = null;\n  const noOrders = React.createElement(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"No orders found.\");\n\n  if (props.loading) {\n    elem = React.createElement(SpinnerComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  } else {\n    elem = React.createElement(\"div\", {\n      className: \"Orders\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, props.orders && props.orders.length === 0 ? noOrders : null, props.orders.map(order => {\n      return React.createElement(Order, {\n        ingrediants: order.ingrediants,\n        price: order.price,\n        key: order.id,\n        deleteThisOrder: () => deleteOrderHandler(order.id),\n        orderData: order.orderData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, elem);\n};\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(actionTypes.fetchOrders(token, userId)),\n    onDeleteOrder: (orderID, token, userId) => dispatch(actionTypes.deleteOrder(orderID, token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(OrdersComponent, OrderxAxios));","map":{"version":3,"sources":["/Users/mk/Desktop/Udemy/React/react-applications/burger-maker-using-hooks/src/features/Containers/Orders/OrdersComponent.js"],"names":["React","useEffect","OrderxAxios","connect","actionTypes","SpinnerComponent","WithErrorHandler","Order","OrdersComponent","props","onFetchOrders","token","userId","deleteOrderHandler","orderID","onDeleteOrder","elem","noOrders","textAlign","loading","orders","length","map","order","ingrediants","price","id","orderData","mapStateToProps","state","auth","mapDispatchToProps","dispatch","fetchOrders","deleteOrder"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport OrderxAxios from '../../../axios-orders';\n\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../../store/actions/index';\n\nimport SpinnerComponent from '../../Components/UIElments/Spinner/Spinner';\nimport WithErrorHandler from '../../hoc/WithErrorHandler/WithErrorHandler';\n\nimport Order from '../../Components/Orders/Order';\nimport './Orders.css';\n\nconst OrdersComponent = (props) => {\n  const { onFetchOrders, token, userId} = props;\n  useEffect(() => {\n    if (token && userId) {\n      onFetchOrders(props.token, props.userId);\n    }\n  }, [onFetchOrders]);\n\n  const deleteOrderHandler = (orderID) => {\n    props.onDeleteOrder(orderID, props.token, props.userId);\n  }\n\n  let elem = null;\n  const noOrders = (<p style={{textAlign: 'center'}}>No orders found.</p>);\n\n  if (props.loading) {\n    elem = (<SpinnerComponent />);\n  } else {\n    elem = (\n\n      <div className=\"Orders\">\n\n        {props.orders && props.orders.length === 0 ? noOrders : null}\n\n        {props.orders.map((order) => {\n          return (\n            < Order\n              ingrediants={order.ingrediants}\n              price={order.price}\n              key={order.id}\n              deleteThisOrder={() => deleteOrderHandler(order.id)}\n              orderData={order.orderData}/> \n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <div >\n      {elem}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(actionTypes.fetchOrders(token, userId)),\n    onDeleteOrder: (orderID, token, userId) => dispatch(actionTypes.deleteOrder(orderID, token, userId)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (WithErrorHandler(OrdersComponent, OrderxAxios));"]},"metadata":{},"sourceType":"module"}