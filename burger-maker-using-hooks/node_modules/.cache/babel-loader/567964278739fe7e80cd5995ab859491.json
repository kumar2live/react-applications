{"ast":null,"code":"var _jsxFileName = \"/Users/mk/Desktop/Udemy/React/react-applications/burger-maker-using-hooks/src/features/Containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport * as actionTypes from '../../../store/actions/index';\nimport Aux from '../../hoc/Aux';\nimport BurgerComponent from '../Burger/BurgerComponent';\nimport BuildControlsComponent from '../Burger/BuildControls/BuildControlsComponent';\nimport ModelComponent from '../../Components/UIElments/Model/ModelComponent';\nimport OrderSummaryComponent from '../../Containers/Burger/OrderSummary/OrderSummaryComponent';\nimport SpinnerComponent from '../../Components/UIElments/Spinner/Spinner';\nimport WithErrorHandlerComponent from '../../hoc/WithErrorHandler/WithErrorHandler';\nimport OrderxAxios from '../../../axios-orders';\n\nconst BurgerBuilderComponent = props => {\n  const [purchasing, setpurchasing] = useState(false);\n  const [showSpinner, setshowSpinner] = useState(false);\n  const dispatch = useDispatch();\n  const ings = useSelector(state => {\n    return state.burger.ingrediants;\n  });\n  const tPrice = useSelector(state => state.burger.totalPrice);\n  const errorRef = useSelector(state => state.burger.error);\n  const isAuthenticated = useSelector(state => state.auth.token !== null);\n\n  const onIngrediantAdded = ingre => dispatch(actionTypes.addIngrediant(ingre));\n\n  const onIngrediantRemoved = ingre => dispatch(actionTypes.removeIngrediant(ingre));\n\n  const onFetchIngrediants = () => dispatch(actionTypes.fetchIngrediants());\n\n  const onOrderingInit = () => dispatch(actionTypes.orderInit());\n\n  const onSetRedirectPath = path => dispatch(actionTypes.setAuthRedirectPath(path));\n\n  useEffect(() => {\n    onFetchIngrediants();\n  }, [onFetchIngrediants]);\n\n  const updateOrderable = ingrediants => {\n    const sum = Object.keys(ingrediants).map(ingrediant => {\n      return ingrediants[ingrediant];\n    }).reduce((acc, nxtValue) => {\n      return acc + nxtValue;\n    }, 0);\n    return sum > 0;\n  };\n\n  const purchasingHandler = () => {\n    if (props.isAuthenticated) {\n      setpurchasing(true);\n    } else {\n      onSetRedirectPath('/checkout');\n      props.history.push('/auth');\n    }\n  };\n\n  const purchaseCancelledHandler = () => {\n    setpurchasing(false);\n  };\n\n  const purchaseContinueHandler = () => {\n    onOrderingInit();\n    props.history.push('/checkout');\n  };\n\n  const disableInfo = { ...props.ings\n  };\n\n  for (let key in disableInfo) {\n    disableInfo[key] = disableInfo[key] <= 0;\n  }\n\n  let orderSummary = null;\n  let burgersElem = props.errorRef ? React.createElement(\"p\", {\n    style: {\n      paddingTop: '5rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Application can't be used. Sorry :(\") : React.createElement(SpinnerComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  });\n\n  if (props.ings) {\n    burgersElem = React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(BurgerComponent, {\n      ingrediants: props.ings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(BuildControlsComponent, {\n      isAuthenticated: props.isAuthenticated,\n      orderClicked: purchasingHandler,\n      orderable: updateOrderable(props.ings),\n      price: props.tPrice,\n      disabled: disableInfo,\n      ingrediantRemoved: onIngrediantRemoved,\n      ingrediantAdded: onIngrediantAdded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n    orderSummary = React.createElement(OrderSummaryComponent, {\n      price: props.tPrice,\n      ingrediants: props.ings,\n      purchaseCancelled: purchaseCancelledHandler,\n      purchaseContineued: purchaseContinueHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    });\n\n    if (showSpinner) {\n      orderSummary = React.createElement(SpinnerComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      });\n    }\n  }\n\n  return React.createElement(Aux, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(ModelComponent, {\n    showModal: purchasing,\n    modalClosed: purchaseCancelledHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, orderSummary), burgersElem);\n};\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burger.ingrediants,\n    tPrice: state.burger.totalPrice,\n    errorRef: state.burger.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngrediantAdded: ingre => dispatch(actionTypes.addIngrediant(ingre)),\n    onIngrediantRemoved: ingre => dispatch(actionTypes.removeIngrediant(ingre)),\n    onFetchIngrediants: () => dispatch(actionTypes.fetchIngrediants()),\n    onOrderingInit: () => dispatch(actionTypes.orderInit()),\n    onSetRedirectPath: path => dispatch(actionTypes.setAuthRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandlerComponent(BurgerBuilderComponent, OrderxAxios));","map":{"version":3,"sources":["/Users/mk/Desktop/Udemy/React/react-applications/burger-maker-using-hooks/src/features/Containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","useState","useEffect","connect","useDispatch","useSelector","actionTypes","Aux","BurgerComponent","BuildControlsComponent","ModelComponent","OrderSummaryComponent","SpinnerComponent","WithErrorHandlerComponent","OrderxAxios","BurgerBuilderComponent","props","purchasing","setpurchasing","showSpinner","setshowSpinner","dispatch","ings","state","burger","ingrediants","tPrice","totalPrice","errorRef","error","isAuthenticated","auth","token","onIngrediantAdded","ingre","addIngrediant","onIngrediantRemoved","removeIngrediant","onFetchIngrediants","fetchIngrediants","onOrderingInit","orderInit","onSetRedirectPath","path","setAuthRedirectPath","updateOrderable","sum","Object","keys","map","ingrediant","reduce","acc","nxtValue","purchasingHandler","history","push","purchaseCancelledHandler","purchaseContinueHandler","disableInfo","key","orderSummary","burgersElem","paddingTop","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport * as actionTypes from '../../../store/actions/index';\n\nimport Aux from '../../hoc/Aux';\nimport BurgerComponent from '../Burger/BurgerComponent';\nimport BuildControlsComponent from '../Burger/BuildControls/BuildControlsComponent';\nimport ModelComponent from '../../Components/UIElments/Model/ModelComponent';\nimport OrderSummaryComponent from '../../Containers/Burger/OrderSummary/OrderSummaryComponent';\nimport SpinnerComponent from '../../Components/UIElments/Spinner/Spinner';\nimport WithErrorHandlerComponent from '../../hoc/WithErrorHandler/WithErrorHandler'; \n\nimport OrderxAxios from '../../../axios-orders';\n\nconst BurgerBuilderComponent = (props) => {\n  const [purchasing, setpurchasing] = useState(false);\n  const [showSpinner, setshowSpinner] = useState(false);\n\n  const dispatch = useDispatch();\n  \n  const ings = useSelector((state) => {\n    return state.burger.ingrediants\n  });\n\n  const tPrice = useSelector((state) => state.burger.totalPrice);\n\n  const errorRef = useSelector((state) => state.burger.error);\n\n  const isAuthenticated = useSelector((state) => state.auth.token !== null);\n\n  const onIngrediantAdded = (ingre) => dispatch(actionTypes.addIngrediant(ingre));\n  const onIngrediantRemoved = (ingre) => dispatch(actionTypes.removeIngrediant(ingre));\n  const onFetchIngrediants = () => dispatch(actionTypes.fetchIngrediants());\n  const onOrderingInit = () => dispatch(actionTypes.orderInit());\n  const onSetRedirectPath = (path) => dispatch(actionTypes.setAuthRedirectPath(path));\n\n  useEffect(() => {\n    onFetchIngrediants();\n  }, [onFetchIngrediants]);\n\n  const updateOrderable = (ingrediants) => {\n    const sum = Object.keys(ingrediants).map((ingrediant) => {\n      return ingrediants[ingrediant];\n    }).reduce((acc, nxtValue) => {\n      return acc + nxtValue;\n    }, 0)\n\n    return sum > 0;\n  }\n\n  const purchasingHandler = () => {\n    if (props.isAuthenticated) {\n      setpurchasing(true);\n    } else {\n      onSetRedirectPath('/checkout');\n      props.history.push('/auth');\n    }\n  }\n\n  const purchaseCancelledHandler = () => {\n    setpurchasing(false);\n  }\n\n  const purchaseContinueHandler = () => {\n    onOrderingInit();\n    props.history.push('/checkout');\n  }\n\n  const disableInfo = {\n    ...props.ings,\n  };\n  for (let key in disableInfo) {\n    disableInfo[key] = disableInfo[key] <= 0;\n  }\n\n  let orderSummary = null;\n  let burgersElem = props.errorRef ? <p style={{paddingTop: '5rem'}}>Application can't be used. Sorry :(</p> :\n    (<SpinnerComponent />);\n\n  if (props.ings) {\n    burgersElem = (\n      <Aux>\n        <BurgerComponent ingrediants={props.ings}/>\n\n        <BuildControlsComponent \n            isAuthenticated={props.isAuthenticated}\n            orderClicked={purchasingHandler}\n            orderable={updateOrderable(props.ings)}\n            price={props.tPrice}\n            disabled={disableInfo}\n            ingrediantRemoved={onIngrediantRemoved}\n            ingrediantAdded={onIngrediantAdded}/>\n      </Aux>\n    );\n\n    orderSummary = (\n      <OrderSummaryComponent\n            price={props.tPrice}\n            ingrediants={props.ings}\n            purchaseCancelled={purchaseCancelledHandler}\n            purchaseContineued={purchaseContinueHandler}/>\n    );\n\n    if (showSpinner) {\n      orderSummary = (<SpinnerComponent />);\n    }\n  }\n\n  return (\n    <Aux>\n      <ModelComponent showModal={purchasing} modalClosed={purchaseCancelledHandler}>\n        {orderSummary}\n      </ModelComponent>\n      \n      {burgersElem}\n    </Aux>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ings: state.burger.ingrediants,\n    tPrice: state.burger.totalPrice,\n    errorRef: state.burger.error,\n    isAuthenticated: state.auth.token !== null,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIngrediantAdded: (ingre) => dispatch(actionTypes.addIngrediant(ingre)),\n    onIngrediantRemoved: (ingre) => dispatch(actionTypes.removeIngrediant(ingre)),\n    onFetchIngrediants: () => dispatch(actionTypes.fetchIngrediants()),\n    onOrderingInit: () => dispatch(actionTypes.orderInit()),\n    onSetRedirectPath: (path) => dispatch(actionTypes.setAuthRedirectPath(path)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (WithErrorHandlerComponent(BurgerBuilderComponent, OrderxAxios));"]},"metadata":{},"sourceType":"module"}