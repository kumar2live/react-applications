{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport default (httpClient => {\n  const [error, seterror] = useState(null);\n  const reqInterceptor = httpClient.interceptors.request.use(req => {\n    seterror(null);\n    return req;\n  });\n  const resInterceptor = httpClient.interceptors.response.use(res => res, errorRef => {\n    seterror(errorRef);\n  });\n  useEffect(() => {\n    return () => {\n      httpClient.interceptors.request.eject(reqInterceptor);\n      httpClient.interceptors.response.eject(resInterceptor);\n    };\n  }, [reqInterceptor, resInterceptor]);\n\n  const errorActionHandler = () => {\n    seterror(null);\n  };\n\n  return [error, errorActionHandler];\n});","map":{"version":3,"sources":["/Users/mk/Desktop/Udemy/React/react-applications/burger-maker-using-hooks/src/hooks/errorHandler.js"],"names":["useEffect","useState","httpClient","error","seterror","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","errorRef","eject","errorActionHandler"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,gBAAgBC,UAAD,IAAgB;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMI,cAAc,GAAGH,UAAU,CAACI,YAAX,CAAwBC,OAAxB,CAAgCC,GAAhC,CAAqCC,GAAD,IAAS;AAClEL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,WAAOK,GAAP;AACD,GAHsB,CAAvB;AAIA,QAAMC,cAAc,GAAGR,UAAU,CAACI,YAAX,CAAwBK,QAAxB,CAAiCH,GAAjC,CAAsCI,GAAD,IAASA,GAA9C,EAAoDC,QAAD,IAAc;AACtFT,IAAAA,QAAQ,CAACS,QAAD,CAAR;AACD,GAFsB,CAAvB;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXE,MAAAA,UAAU,CAACI,YAAX,CAAwBC,OAAxB,CAAgCO,KAAhC,CAAsCT,cAAtC;AACAH,MAAAA,UAAU,CAACI,YAAX,CAAwBK,QAAxB,CAAiCG,KAAjC,CAAuCJ,cAAvC;AACD,KAHD;AAID,GALQ,EAKN,CAACL,cAAD,EAAiBK,cAAjB,CALM,CAAT;;AAOA,QAAMK,kBAAkB,GAAG,MAAM;AAC/BX,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAIA,SAAO,CAACD,KAAD,EAAQY,kBAAR,CAAP;AACD,CAvBD","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default (httpClient) => {\n  const [error, seterror] = useState(null);\n\n  const reqInterceptor = httpClient.interceptors.request.use((req) => {\n    seterror(null);\n    return req;\n  });\n  const resInterceptor = httpClient.interceptors.response.use((res) => res, (errorRef) => {\n    seterror(errorRef);\n  });\n\n  useEffect(() => {\n    return () => {\n      httpClient.interceptors.request.eject(reqInterceptor);\n      httpClient.interceptors.response.eject(resInterceptor);\n    }\n  }, [reqInterceptor, resInterceptor]);\n\n  const errorActionHandler = () => {\n    seterror(null);\n  }\n\n  return [error, errorActionHandler];\n}\n"]},"metadata":{},"sourceType":"module"}