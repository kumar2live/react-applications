{"ast":null,"code":"var _jsxFileName = \"/Users/mk/Desktop/Udemy/React/react-applications/burger-maker-using-hooks/src/features/Containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../../store/actions/index';\nimport Aux from '../../hoc/Aux';\nimport BurgerComponent from '../Burger/BurgerComponent';\nimport BuildControlsComponent from '../Burger/BuildControls/BuildControlsComponent';\nimport ModelComponent from '../../Components/UIElments/Model/ModelComponent';\nimport OrderSummaryComponent from '../../Containers/Burger/OrderSummary/OrderSummaryComponent';\nimport SpinnerComponent from '../../Components/UIElments/Spinner/Spinner';\nimport WithErrorHandlerComponent from '../../hoc/WithErrorHandler/WithErrorHandler';\nimport OrderxAxios from '../../../axios-orders';\n\nconst BurgerBuilderComponent = props => {\n  const [purchasing, setpurchasing] = useState(false);\n  const [showSpinner, setshowSpinner] = useState(false);\n  useEffect(() => {\n    props.onFetchIngrediants();\n  }, []);\n\n  const updateOrderable = ingrediants => {\n    const sum = Object.keys(ingrediants).map(ingrediant => {\n      return ingrediants[ingrediant];\n    }).reduce((acc, nxtValue) => {\n      return acc + nxtValue;\n    }, 0);\n    return sum > 0;\n  };\n\n  const purchasingHandler = () => {\n    if (props.isAuthenticated) {\n      setpurchasing(true);\n    } else {\n      props.onSetRedirectPath('/checkout');\n      props.history.push('/auth');\n    }\n  };\n\n  const purchaseCancelledHandler = () => {\n    setpurchasing(false);\n  };\n\n  const purchaseContinueHandler = () => {\n    props.onOrderingInit();\n    props.history.push('/checkout');\n  };\n\n  const disableInfo = { ...props.ings\n  };\n\n  for (let key in disableInfo) {\n    disableInfo[key] = disableInfo[key] <= 0;\n  }\n\n  let orderSummary = null;\n  let burgersElem = props.errorRef ? React.createElement(\"p\", {\n    style: {\n      paddingTop: '5rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Application can't be used. Sorry :(\") : React.createElement(SpinnerComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  });\n\n  if (props.ings) {\n    burgersElem = React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(BurgerComponent, {\n      ingrediants: props.ings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(BuildControlsComponent, {\n      isAuthenticated: props.isAuthenticated,\n      orderClicked: this.purchasingHandler,\n      orderable: this.updateOrderable(props.ings),\n      price: props.tPrice,\n      disabled: disableInfo,\n      ingrediantRemoved: props.onIngrediantRemoved,\n      ingrediantAdded: props.onIngrediantAdded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n    orderSummary = React.createElement(OrderSummaryComponent, {\n      price: props.tPrice,\n      ingrediants: props.ings,\n      purchaseCancelled: this.purchaseCancelledHandler,\n      purchaseContineued: this.purchaseContinueHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    });\n\n    if (this.state.showSpinner) {\n      orderSummary = React.createElement(SpinnerComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n    }\n  }\n\n  return React.createElement(Aux, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(ModelComponent, {\n    showModal: this.state.purchasing,\n    modalClosed: this.purchaseCancelledHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, orderSummary), burgersElem);\n};\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burger.ingrediants,\n    tPrice: state.burger.totalPrice,\n    errorRef: state.burger.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngrediantAdded: ingre => dispatch(actionTypes.addIngrediant(ingre)),\n    onIngrediantRemoved: ingre => dispatch(actionTypes.removeIngrediant(ingre)),\n    onFetchIngrediants: () => dispatch(actionTypes.fetchIngrediants()),\n    onOrderingInit: () => dispatch(actionTypes.orderInit()),\n    onSetRedirectPath: path => dispatch(actionTypes.setAuthRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandlerComponent(BurgerBuilderComponent, OrderxAxios));","map":{"version":3,"sources":["/Users/mk/Desktop/Udemy/React/react-applications/burger-maker-using-hooks/src/features/Containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","useState","useEffect","connect","actionTypes","Aux","BurgerComponent","BuildControlsComponent","ModelComponent","OrderSummaryComponent","SpinnerComponent","WithErrorHandlerComponent","OrderxAxios","BurgerBuilderComponent","props","purchasing","setpurchasing","showSpinner","setshowSpinner","onFetchIngrediants","updateOrderable","ingrediants","sum","Object","keys","map","ingrediant","reduce","acc","nxtValue","purchasingHandler","isAuthenticated","onSetRedirectPath","history","push","purchaseCancelledHandler","purchaseContinueHandler","onOrderingInit","disableInfo","ings","key","orderSummary","burgersElem","errorRef","paddingTop","tPrice","onIngrediantRemoved","onIngrediantAdded","state","mapStateToProps","burger","totalPrice","error","auth","token","mapDispatchToProps","dispatch","ingre","addIngrediant","removeIngrediant","fetchIngrediants","orderInit","path","setAuthRedirectPath"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,8BAA7B;AAEA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,sBAAP,MAAmC,gDAAnC;AACA,OAAOC,cAAP,MAA2B,iDAA3B;AACA,OAAOC,qBAAP,MAAkC,4DAAlC;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;AACA,OAAOC,yBAAP,MAAsC,6CAAtC;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;;AAEA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AACxC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAACK,kBAAN;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,eAAe,GAAIC,WAAD,IAAiB;AACvC,UAAMC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,UAAD,IAAgB;AACvD,aAAOL,WAAW,CAACK,UAAD,CAAlB;AACD,KAFW,EAETC,MAFS,CAEF,CAACC,GAAD,EAAMC,QAAN,KAAmB;AAC3B,aAAOD,GAAG,GAAGC,QAAb;AACD,KAJW,EAIT,CAJS,CAAZ;AAMA,WAAOP,GAAG,GAAG,CAAb;AACD,GARD;;AAUA,QAAMQ,iBAAiB,GAAG,MAAM;AAC9B,QAAIhB,KAAK,CAACiB,eAAV,EAA2B;AACzBf,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD,MAEO;AACLF,MAAAA,KAAK,CAACkB,iBAAN,CAAwB,WAAxB;AACAlB,MAAAA,KAAK,CAACmB,OAAN,CAAcC,IAAd,CAAmB,OAAnB;AACD;AACF,GAPD;;AASA,QAAMC,wBAAwB,GAAG,MAAM;AACrCnB,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,QAAMoB,uBAAuB,GAAG,MAAM;AACpCtB,IAAAA,KAAK,CAACuB,cAAN;AACAvB,IAAAA,KAAK,CAACmB,OAAN,CAAcC,IAAd,CAAmB,WAAnB;AACD,GAHD;;AAKA,QAAMI,WAAW,GAAG,EAClB,GAAGxB,KAAK,CAACyB;AADS,GAApB;;AAGA,OAAK,IAAIC,GAAT,IAAgBF,WAAhB,EAA6B;AAC3BA,IAAAA,WAAW,CAACE,GAAD,CAAX,GAAmBF,WAAW,CAACE,GAAD,CAAX,IAAoB,CAAvC;AACD;;AAED,MAAIC,YAAY,GAAG,IAAnB;AACA,MAAIC,WAAW,GAAG5B,KAAK,CAAC6B,QAAN,GAAiB;AAAG,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAjB,GACf,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;;AAGA,MAAI9B,KAAK,CAACyB,IAAV,EAAgB;AACdG,IAAAA,WAAW,GACT,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,WAAW,EAAE5B,KAAK,CAACyB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,sBAAD;AACI,MAAA,eAAe,EAAEzB,KAAK,CAACiB,eAD3B;AAEI,MAAA,YAAY,EAAE,KAAKD,iBAFvB;AAGI,MAAA,SAAS,EAAE,KAAKV,eAAL,CAAqBN,KAAK,CAACyB,IAA3B,CAHf;AAII,MAAA,KAAK,EAAEzB,KAAK,CAAC+B,MAJjB;AAKI,MAAA,QAAQ,EAAEP,WALd;AAMI,MAAA,iBAAiB,EAAExB,KAAK,CAACgC,mBAN7B;AAOI,MAAA,eAAe,EAAEhC,KAAK,CAACiC,iBAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAeAN,IAAAA,YAAY,GACV,oBAAC,qBAAD;AACM,MAAA,KAAK,EAAE3B,KAAK,CAAC+B,MADnB;AAEM,MAAA,WAAW,EAAE/B,KAAK,CAACyB,IAFzB;AAGM,MAAA,iBAAiB,EAAE,KAAKJ,wBAH9B;AAIM,MAAA,kBAAkB,EAAE,KAAKC,uBAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;;AAQA,QAAI,KAAKY,KAAL,CAAW/B,WAAf,EAA4B;AAC1BwB,MAAAA,YAAY,GAAI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;AACD;AACF;;AAED,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAE,KAAKO,KAAL,CAAWjC,UAAtC;AAAkD,IAAA,WAAW,EAAE,KAAKoB,wBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,YADH,CADF,EAKGC,WALH,CADF;AASD,CArFD;;AAuFA,MAAMO,eAAe,GAAID,KAAD,IAAW;AACjC,SAAO;AACLT,IAAAA,IAAI,EAAES,KAAK,CAACE,MAAN,CAAa7B,WADd;AAELwB,IAAAA,MAAM,EAAEG,KAAK,CAACE,MAAN,CAAaC,UAFhB;AAGLR,IAAAA,QAAQ,EAAEK,KAAK,CAACE,MAAN,CAAaE,KAHlB;AAILrB,IAAAA,eAAe,EAAEiB,KAAK,CAACK,IAAN,CAAWC,KAAX,KAAqB;AAJjC,GAAP;AAMD,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLT,IAAAA,iBAAiB,EAAGU,KAAD,IAAWD,QAAQ,CAACpD,WAAW,CAACsD,aAAZ,CAA0BD,KAA1B,CAAD,CADjC;AAELX,IAAAA,mBAAmB,EAAGW,KAAD,IAAWD,QAAQ,CAACpD,WAAW,CAACuD,gBAAZ,CAA6BF,KAA7B,CAAD,CAFnC;AAGLtC,IAAAA,kBAAkB,EAAE,MAAMqC,QAAQ,CAACpD,WAAW,CAACwD,gBAAZ,EAAD,CAH7B;AAILvB,IAAAA,cAAc,EAAE,MAAMmB,QAAQ,CAACpD,WAAW,CAACyD,SAAZ,EAAD,CAJzB;AAKL7B,IAAAA,iBAAiB,EAAG8B,IAAD,IAAUN,QAAQ,CAACpD,WAAW,CAAC2D,mBAAZ,CAAgCD,IAAhC,CAAD;AALhC,GAAP;AAOD,CARD;;AAUA,eAAe3D,OAAO,CAAC8C,eAAD,EAAkBM,kBAAlB,CAAP,CAA8C5C,yBAAyB,CAACE,sBAAD,EAAyBD,WAAzB,CAAvE,CAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../../store/actions/index';\n\nimport Aux from '../../hoc/Aux';\nimport BurgerComponent from '../Burger/BurgerComponent';\nimport BuildControlsComponent from '../Burger/BuildControls/BuildControlsComponent';\nimport ModelComponent from '../../Components/UIElments/Model/ModelComponent';\nimport OrderSummaryComponent from '../../Containers/Burger/OrderSummary/OrderSummaryComponent';\nimport SpinnerComponent from '../../Components/UIElments/Spinner/Spinner';\nimport WithErrorHandlerComponent from '../../hoc/WithErrorHandler/WithErrorHandler'; \n\nimport OrderxAxios from '../../../axios-orders';\n\nconst BurgerBuilderComponent = (props) => {\n  const [purchasing, setpurchasing] = useState(false);\n  const [showSpinner, setshowSpinner] = useState(false);\n\n  useEffect(() => {\n    props.onFetchIngrediants();\n  }, []);\n\n  const updateOrderable = (ingrediants) => {\n    const sum = Object.keys(ingrediants).map((ingrediant) => {\n      return ingrediants[ingrediant];\n    }).reduce((acc, nxtValue) => {\n      return acc + nxtValue;\n    }, 0)\n\n    return sum > 0;\n  }\n\n  const purchasingHandler = () => {\n    if (props.isAuthenticated) {\n      setpurchasing(true);\n    } else {\n      props.onSetRedirectPath('/checkout');\n      props.history.push('/auth');\n    }\n  }\n\n  const purchaseCancelledHandler = () => {\n    setpurchasing(false);\n  }\n\n  const purchaseContinueHandler = () => {\n    props.onOrderingInit();\n    props.history.push('/checkout');\n  }\n\n  const disableInfo = {\n    ...props.ings,\n  };\n  for (let key in disableInfo) {\n    disableInfo[key] = disableInfo[key] <= 0;\n  }\n\n  let orderSummary = null;\n  let burgersElem = props.errorRef ? <p style={{paddingTop: '5rem'}}>Application can't be used. Sorry :(</p> :\n    (<SpinnerComponent />);\n\n  if (props.ings) {\n    burgersElem = (\n      <Aux>\n        <BurgerComponent ingrediants={props.ings}/>\n\n        <BuildControlsComponent \n            isAuthenticated={props.isAuthenticated}\n            orderClicked={this.purchasingHandler}\n            orderable={this.updateOrderable(props.ings)}\n            price={props.tPrice}\n            disabled={disableInfo}\n            ingrediantRemoved={props.onIngrediantRemoved}\n            ingrediantAdded={props.onIngrediantAdded}/>\n      </Aux>\n    );\n\n    orderSummary = (\n      <OrderSummaryComponent\n            price={props.tPrice}\n            ingrediants={props.ings}\n            purchaseCancelled={this.purchaseCancelledHandler}\n            purchaseContineued={this.purchaseContinueHandler}/>\n    );\n\n    if (this.state.showSpinner) {\n      orderSummary = (<SpinnerComponent />);\n    }\n  }\n\n  return (\n    <Aux>\n      <ModelComponent showModal={this.state.purchasing} modalClosed={this.purchaseCancelledHandler}>\n        {orderSummary}\n      </ModelComponent>\n      \n      {burgersElem}\n    </Aux>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ings: state.burger.ingrediants,\n    tPrice: state.burger.totalPrice,\n    errorRef: state.burger.error,\n    isAuthenticated: state.auth.token !== null,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIngrediantAdded: (ingre) => dispatch(actionTypes.addIngrediant(ingre)),\n    onIngrediantRemoved: (ingre) => dispatch(actionTypes.removeIngrediant(ingre)),\n    onFetchIngrediants: () => dispatch(actionTypes.fetchIngrediants()),\n    onOrderingInit: () => dispatch(actionTypes.orderInit()),\n    onSetRedirectPath: (path) => dispatch(actionTypes.setAuthRedirectPath(path)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (WithErrorHandlerComponent(BurgerBuilderComponent, OrderxAxios));"]},"metadata":{},"sourceType":"module"}