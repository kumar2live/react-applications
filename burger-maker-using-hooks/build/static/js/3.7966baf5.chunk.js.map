{"version":3,"sources":["shared/utility.js","features/Components/Orders/CheckOutSummary/CheckOutSummary.module.css","features/Containers/CheckOut/ContactData/ContactData.module.css","features/Components/Orders/CheckOutSummary/CheckOutSummary.js","features/Containers/CheckOut/ContactData/ContactData.js","features/Containers/CheckOut/CheckoutComponent.js","features/Components/UIElments/Input/Input.js","features/Components/UIElments/Input/Input.module.css"],"names":["checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","module","exports","CheckOutSummary","props","Fragment","className","CssStyles","style","width","margin","BurgerComponent","ingrediants","Buttons","btnType","btnClicked","purchaseCancelled","purchaseContineued","ContactDataComponent","state","formIsValid","orderForm","name","elemType","elemConfig","type","placeholder","validation","valid","touched","street","country","zipCode","email","deliveryMethod","options","displayValue","orderHandler","event","preventDefault","order","ings","price","tPrice","orderData","getFormData","userId","onOrderSubmit","token","propertyChangedHandler","inputIdentifier","target","updatedOrderForm","updatedOrderElem","formValidity","elems","setState","formData","elemIden","this","formElemArr","key","push","id","config","elem","loading","Spinner","onSubmit","map","formElem","Input","invalid","shouldValidate","label","propertyChanged","e","btnDisabled","CssClasses","ContactData","toFixed","Component","connect","burger","totalPrice","auth","dispatch","actionTypes","onIngrediantsReset","WithErrorHandler","OrderxAxios","CheckoutComponent","purchaseContineuedHandler","history","replace","purchaseCancelledHandler","goBack","summary","to","purchasedRedirect","purchased","path","match","component","InputComponent","inputElem","errorElem","inputClasses","InputElem","Invalid","color","onChange","join","opt","Label","htmlFor"],"mappings":"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","file":"static/js/3.7966baf5.chunk.js","sourcesContent":["export const checkValidity = (value, rules) => {\n  let isValid = true;\n\n  if (rules.required) {\n    isValid = (value.trim() !== '') && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = (value.length >= rules.minLength && isValid);\n  }\n  \n  if (rules.maxLength) {\n    isValid = (value.length <= rules.maxLength && isValid);\n  }\n  \n  return isValid;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckOutSummary\":\"CheckOutSummary_CheckOutSummary__d5pLu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__zGX3U\"};","import React from 'react';\n\nimport CssStyles from './CheckOutSummary.module.css';\n\nimport BurgerComponent from '../../../Containers/Burger/BurgerComponent';\nimport ButtonsComponent from '../../../Components/UIElments/Buttons/Buttons';\n\nconst CheckOutSummary = (props) => {\n  \n\n  return (\n    <React.Fragment>\n      <div className={CssStyles.CheckOutSummary}>\n        <h1>We hope it tastes well!</h1>\n\n        <div style={{width: '100%', margin: 'auto'}}>\n          <BurgerComponent ingrediants={props.ingrediants}/>\n          \n          <ButtonsComponent btnType='Danger' btnClicked={props.purchaseCancelled}>CANCEL</ButtonsComponent>\n          <ButtonsComponent btnType='Success' btnClicked={props.purchaseContineued}>CONTINUE</ButtonsComponent>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default CheckOutSummary;","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../../../store/actions/index';\n\nimport OrderxAxios from '../../../../axios-orders';\n\nimport CssClasses from './ContactData.module.css';\n\nimport ButtonsComponent from '../../../Components/UIElments/Buttons/Buttons';\nimport SpinnerComponent from '../../../Components/UIElments/Spinner/Spinner';\nimport InputComponent from '../../../Components/UIElments/Input/Input';\n\nimport { checkValidity } from '../../../../shared/utility';\n\nimport WithErrorHandler from '../../../hoc/WithErrorHandler/WithErrorHandler';\n\nclass ContactDataComponent extends Component {\n  state = {\n    formIsValid: false,\n    orderForm: {\n      name: {\n        name: 'Name: ',\n        elemType: 'input',\n        elemConfig: {\n          type: 'text', placeholder: 'Your name',\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false,\n      },\n      street: {\n        name: 'Street: ',\n        elemType: 'input',\n        elemConfig: {\n          type: 'text', placeholder: 'Where is your house',\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false,\n      },\n      country: {\n        name: 'Country: ',\n        elemType: 'input',\n        elemConfig: {\n          type: 'text', placeholder: 'Country',\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false,\n      },\n      zipCode: {\n        name: 'Zip Code: ',\n        elemType: 'input',\n        elemConfig: {\n          type: 'text', placeholder: 'Zip Code',\n        },\n        value: '',\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 6,\n        },\n        valid: false,\n        touched: false,\n      },\n      email: {\n        name: 'Email: ',\n        elemType: 'email',\n        elemConfig: {\n          type: 'text', placeholder: 'Your Email ID',\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false,\n      },\n      deliveryMethod: {\n        name: 'Delivery Method: ',\n        elemType: 'select',\n        elemConfig: {\n          options: [\n            {value: 'fastest', displayValue: 'Fastest method'},\n            {value: 'cheapest', displayValue: 'Cheapest method'}\n          ],\n        },\n        value: 'fastest',\n        validation: {},\n        valid: true,\n      },\n    },\n  }\n\n  componentDidMount() {\n    // console.log('ContactDataComponent this.props -- ', this.props);\n  }\n\n  getFormData() {\n    const formData = {};\n\n    for (let elemIden in this.state.orderForm) {\n      formData[elemIden] = this.state.orderForm[elemIden].value;\n    }\n\n    return formData;\n  }\n\n  orderHandler = (event) => {\n    event.preventDefault();\n\n    const order = {\n      ingrediants: this.props.ings,\n      price: this.props.tPrice,\n      orderData: this.getFormData(),\n      userId: this.props.userId,\n    }\n\n    this.props.onOrderSubmit(order, this.props.token);\n  }\n\n  propertyChangedHandler = (event, inputIdentifier) => {\n    const {value} = event.target;\n    const updatedOrderForm = {...this.state.orderForm};\n    const updatedOrderElem = {...updatedOrderForm[inputIdentifier]};\n    updatedOrderElem.value = value;\n    updatedOrderElem.touched = true;\n    updatedOrderElem.valid = checkValidity(updatedOrderElem.value , updatedOrderElem.validation)\n\n    updatedOrderForm[inputIdentifier] = updatedOrderElem;\n    \n    let formValidity = true;\n    for (let elems in updatedOrderForm) {\n      formValidity = (updatedOrderForm[elems].valid && formValidity);\n    }\n\n    this.setState({\n      orderForm: updatedOrderForm, formIsValid: formValidity,\n    })\n  }\n\n  render() {\n\n    const formElemArr = [];\n    for(let key in this.state.orderForm) {\n      formElemArr.push({\n        id: key,\n        config: this.state.orderForm[key],\n      });\n    }\n\n    let elem = null;\n\n    if (this.props.loading) {\n      elem = (<SpinnerComponent />);\n    } else {\n      elem = (\n        <form onSubmit={this.orderHandler}>\n          {formElemArr.map((formElem) => {\n            return (\n              <InputComponent\n                invalid={!formElem.config.valid}\n                shouldValidate={formElem.config.validation}\n                touched={formElem.config.touched}\n                key={formElem.id}\n                label={formElem.config.name}\n                elemType={formElem.config.elemType}\n                elemConfig={formElem.config.elemConfig}\n                value={formElem.config.value}\n                propertyChanged={(e) => {this.propertyChangedHandler(e, formElem.id)}}\n              />\n            );\n          })}\n\n          <ButtonsComponent btnType='Success' btnDisabled={!this.state.formIsValid} >ORDER</ButtonsComponent>\n        </form>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <div className={CssClasses.ContactData}>\n          <h4>Your Burger is just ${(+this.props.tPrice).toFixed(2)}</h4>\n          <h4>Enter yout Contact Information</h4>\n\n          {elem}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ings: state.burger.ingrediants,\n    tPrice: state.burger.totalPrice,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onOrderSubmit: (order, token) => dispatch(actionTypes.orderBurger(order, token)),\n    onIngrediantsReset: () => dispatch(actionTypes.resetIngrediant()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(ContactDataComponent, OrderxAxios));","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport CheckOutSummary from '../../Components/Orders/CheckOutSummary/CheckOutSummary';\nimport ContactDataComponent from '../CheckOut/ContactData/ContactData';\n\n\nimport { Route, Redirect } from 'react-router-dom';\n\nclass CheckoutComponent extends Component {\n\n  purchaseContineuedHandler = () => {\n    this.props.history.replace('/checkout/contact-data')\n  }\n\n  purchaseCancelledHandler = () => {\n    this.props.history.goBack();\n  }\n\n  render () {\n    // console.log('CheckoutComponent -- ', this.props);\n    let summary = (\n      <Redirect to=\"/\" />\n    );\n\n    if (this.props.ings) {\n      const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\n\n      summary = (\n        <div>\n          {purchasedRedirect}\n          <CheckOutSummary \n            purchaseCancelled={this.purchaseCancelledHandler}\n            purchaseContineued={this.purchaseContineuedHandler}\n            ingrediants={this.props.ings}/>\n\n          <Route path={this.props.match.path + '/contact-data'} component={ContactDataComponent}/>\n        </div>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        {summary}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ings: state.burger.ingrediants,\n    purchased: state.order.purchased,\n  }\n}\n\n\nexport default connect(mapStateToProps) (CheckoutComponent);","import React from 'react';\nimport CssStyles from './Input.module.css';\n\nconst InputComponent = (props) => {\n  let inputElem = null;\n  let errorElem = null;\n  // console.log(props);\n\n  const inputClasses = [CssStyles.InputElem];\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(CssStyles.Invalid);\n    errorElem = (<span style={{color: '#ab0c0c'}}>Please enter valid inputs.!</span>);\n  }\n\n  switch(props.elemType) {\n    case ('input'):\n    case ('email'):\n      inputElem = (<input onChange={props.propertyChanged}  className={inputClasses.join(' ')} {...props.elemConfig} value={props.value}/>);\n      break;\n    case ('textarea'):\n      inputElem = (<textarea onChange={props.propertyChanged} className={inputClasses.join(' ')} {...props.elemConfig} value={props.value} />);\n      break;\n    case ('select'):\n      inputElem = (\n        <select onChange={props.propertyChanged} className={inputClasses.join(' ')} value={props.value}>\n          {props.elemConfig.options.map((opt) => {\n            return (\n              <option key={opt.value} value={opt.value}> {opt.displayValue} </option>\n            );\n          })}\n        </select>\n        );\n      break;\n    default:\n      inputElem = (<input onChange={props.propertyChanged} className={inputClasses.join(' ')} {...props.elemConfig} value={props.value}/>);\n  }\n\n  return (\n    <div className={CssStyles.Input} >\n      <label className={CssStyles.Label} htmlFor={props.name}>{props.label}</label>\n      {inputElem}\n      {errorElem}\n    </div>\n  );\n}\n\nexport default InputComponent;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3eVeB\",\"Label\":\"Input_Label__116ES\",\"InputElem\":\"Input_InputElem__3mPQe\",\"Invalid\":\"Input_Invalid__29bGl\"};"],"sourceRoot":""}