{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = authData => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: authData.idToken,\n    userId: authData.localId\n  };\n};\nexport const authFailed = error => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expiryDate');\n  localStorage.removeItem('userId');\n  return {\n    type: actionTypes.AUTH_LOG_OUT\n  };\n};\nexport const checkAuthTimeOut = timeData => {\n  return dispatch => {\n    setTimeout(() => dispatch(logout()), timeData * 1000);\n  };\n};\nexport const auth = (email, password, isSignUp) => {\n  return dispatch => {\n    dispatch(authStart());\n    let url = 'replacewithsignup';\n    url = isSignUp ? url : 'replacewithsignin';\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    axios.post(url, authData).then(response => {\n      // console.log(response);\n      const expDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('expiryDate', expDate);\n      localStorage.setItem('userId', response.data.localId);\n      dispatch(authSuccess(response.data));\n      dispatch(checkAuthTimeOut(response.data.expiresIn));\n    }).catch(error => {\n      // console.log(error);\n      dispatch(authFailed(error.response.data.error));\n    });\n  };\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expiryDate = localStorage.getItem('expiryDate');\n\n      if (expiryDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        const userId = localStorage.getItem('userId');\n        dispatch(authSuccess({\n          idToken: token,\n          localId: userId\n        }));\n        dispatch(checkAuthTimeOut((new Date(expiryDate).getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/mk/Desktop/Udemy/React/react-applications/burger-maker-using-hooks/src/store/actions/authActions.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","authData","AUTH_SUCCESS","token","idToken","userId","localId","authFailed","error","AUTH_FAILED","logout","localStorage","removeItem","AUTH_LOG_OUT","checkAuthTimeOut","timeData","dispatch","setTimeout","auth","email","password","isSignUp","url","returnSecureToken","post","then","response","expDate","Date","getTime","data","expiresIn","setItem","catch","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState","getItem","expiryDate"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLH,IAAAA,IAAI,EAAEH,WAAW,CAACO,YADb;AAELC,IAAAA,KAAK,EAAEF,QAAQ,CAACG,OAFX;AAGLC,IAAAA,MAAM,EAAEJ,QAAQ,CAACK;AAHZ,GAAP;AAKD,CANM;AAQP,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AACnC,SAAO;AACLV,IAAAA,IAAI,EAAEH,WAAW,CAACc,WADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAME,MAAM,GAAG,MAAM;AAC1BC,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,YAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,QAAxB;AACA,SAAO;AACLd,IAAAA,IAAI,EAAEH,WAAW,CAACkB;AADb,GAAP;AAGD,CAPM;AASP,OAAO,MAAMC,gBAAgB,GAAIC,QAAD,IAAc;AAC5C,SAAQC,QAAD,IAAc;AACnBC,IAAAA,UAAU,CAAC,MAAMD,QAAQ,CAACN,MAAM,EAAP,CAAf,EAA2BK,QAAQ,GAAG,IAAtC,CAAV;AACD,GAFD;AAGD,CAJM;AAMP,OAAO,MAAMG,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAA+B;AACjD,SAAQL,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACnB,SAAS,EAAV,CAAR;AAEA,QAAIyB,GAAG,GAAG,mBAAV;AAEAA,IAAAA,GAAG,GAAGD,QAAQ,GAAGC,GAAH,GAAS,mBAAvB;AAEA,UAAMrB,QAAQ,GAAG;AACfkB,MAAAA,KAAK,EAAEA,KADQ;AACDC,MAAAA,QAAQ,EAAEA,QADT;AACmBG,MAAAA,iBAAiB,EAAE;AADtC,KAAjB;AAIA3B,IAAAA,KAAK,CAAC4B,IAAN,CAAWF,GAAX,EAAgBrB,QAAhB,EAA0BwB,IAA1B,CAAgCC,QAAD,IAAc;AAC3C;AACA,YAAMC,OAAO,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAwBH,QAAQ,CAACI,IAAT,CAAcC,SAAd,GAA0B,IAA3D,CAAhB;AACApB,MAAAA,YAAY,CAACqB,OAAb,CAAqB,OAArB,EAA8BN,QAAQ,CAACI,IAAT,CAAc1B,OAA5C;AACAO,MAAAA,YAAY,CAACqB,OAAb,CAAqB,YAArB,EAAmCL,OAAnC;AACAhB,MAAAA,YAAY,CAACqB,OAAb,CAAqB,QAArB,EAA+BN,QAAQ,CAACI,IAAT,CAAcxB,OAA7C;AAEAU,MAAAA,QAAQ,CAAChB,WAAW,CAAC0B,QAAQ,CAACI,IAAV,CAAZ,CAAR;AACAd,MAAAA,QAAQ,CAACF,gBAAgB,CAACY,QAAQ,CAACI,IAAT,CAAcC,SAAf,CAAjB,CAAR;AACD,KATD,EASGE,KATH,CASUzB,KAAD,IAAW;AAClB;AACAQ,MAAAA,QAAQ,CAACT,UAAU,CAACC,KAAK,CAACkB,QAAN,CAAeI,IAAf,CAAoBtB,KAArB,CAAX,CAAR;AACD,KAZD;AAaD,GAxBD;AAyBD,CA1BM;AA4BP,OAAO,MAAM0B,mBAAmB,GAAIC,IAAD,IAAU;AAC3C,SAAO;AACLrC,IAAAA,IAAI,EAAEH,WAAW,CAACyC,sBADb;AAELD,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALM;AAOP,OAAO,MAAME,cAAc,GAAG,MAAM;AAClC,SAAOrB,QAAQ,IAAI;AACjB,UAAMb,KAAK,GAAGQ,YAAY,CAAC2B,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAI,CAACnC,KAAL,EAAY;AACVa,MAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AACD,KAFD,MAEO;AACL,YAAM6B,UAAU,GAAG5B,YAAY,CAAC2B,OAAb,CAAqB,YAArB,CAAnB;;AACA,UAAIC,UAAU,IAAI,IAAIX,IAAJ,EAAlB,EAA8B;AAC5BZ,QAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AACD,OAFD,MAEO;AACL,cAAML,MAAM,GAAGM,YAAY,CAAC2B,OAAb,CAAqB,QAArB,CAAf;AACAtB,QAAAA,QAAQ,CAAChB,WAAW,CAAC;AAACI,UAAAA,OAAO,EAAED,KAAV;AAAiBG,UAAAA,OAAO,EAAED;AAA1B,SAAD,CAAZ,CAAR;AACAW,QAAAA,QAAQ,CAACF,gBAAgB,CAAC,CAAC,IAAIc,IAAJ,CAASW,UAAT,EAAqBV,OAArB,KAAiC,IAAID,IAAJ,GAAWC,OAAX,EAAlC,IAA0D,IAA3D,CAAjB,CAAR;AACD;AACF;AACF,GAfD;AAgBD,CAjBM","sourcesContent":["import * as actionTypes from './actionTypes';\n\nimport axios from 'axios';\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  }\n}\n\nexport const authSuccess = (authData) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: authData.idToken,\n    userId: authData.localId,\n  }\n}\n\nexport const authFailed = (error) => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error,\n  }\n}\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expiryDate');\n  localStorage.removeItem('userId');\n  return {\n    type: actionTypes.AUTH_LOG_OUT,\n  }\n}\n\nexport const checkAuthTimeOut = (timeData) => {\n  return (dispatch) => {\n    setTimeout(() => dispatch(logout()), timeData * 1000);\n  }\n}\n\nexport const auth = (email, password, isSignUp) => {\n  return (dispatch) => {\n    dispatch(authStart());\n\n    let url = 'replacewithsignup';\n\n    url = isSignUp ? url : 'replacewithsignin';\n\n    const authData = {\n      email: email, password: password, returnSecureToken: true,\n    }\n\n    axios.post(url, authData).then((response) => {\n      // console.log(response);\n      const expDate = new Date(new Date().getTime() + (response.data.expiresIn * 1000));\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('expiryDate', expDate);\n      localStorage.setItem('userId', response.data.localId);\n\n      dispatch(authSuccess(response.data));\n      dispatch(checkAuthTimeOut(response.data.expiresIn));\n    }).catch((error) => {\n      // console.log(error);\n      dispatch(authFailed(error.response.data.error));\n    })\n  }\n}\n\nexport const setAuthRedirectPath = (path) => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path,\n  }\n}\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expiryDate = localStorage.getItem('expiryDate');\n      if (expiryDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        const userId = localStorage.getItem('userId');\n        dispatch(authSuccess({idToken: token, localId: userId}));\n        dispatch(checkAuthTimeOut((new Date(expiryDate).getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}